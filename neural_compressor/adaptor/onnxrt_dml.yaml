## Copyright (c) 2021 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
#

-
  version:
    name: '1.13.1'
  int8: &ref_1_13 {
    'static': &ref_1_13_static {
      'Conv': &default_static_qlinear_qdq {
        'weight':   &int8_sym_pertensor_minmax {
                    'dtype': ['int8'],
                    'scheme': ['sym'],
                    'granularity': ['per_tensor'],
                    'algorithm': ['minmax']
                    },
        'activation': &uint8_asym_pertensor_minmax {
                    'dtype': ['uint8'],
                    'scheme': ['asym'],
                    'granularity': ['per_tensor'],
                    'algorithm': ['minmax']
                    },
        'mode': ['QDQ', 'QLinear']
      },
      'MatMul': {
        'weight': *int8_sym_pertensor_minmax,
        'activation': *uint8_asym_pertensor_minmax,
        'mode': ['QDQ', 'QLinear']
      },
      'Mul': &default_static_qlinear {
        'weight':   *int8_sym_pertensor_minmax,
        'activation': *uint8_asym_pertensor_minmax,
        'mode': ['QLinear']
      },
      'Relu': *default_static_qlinear_qdq,
      'Clip': *default_static_qlinear_qdq,
      'MaxPool': *default_static_qlinear_qdq,
      'Add': *default_static_qlinear,
    },
  }
  fp16: &common_fp16 ['Add', 'GlobalAveragePool', 'AveragePool', 'SpaceToDepth', 'Sigmoid', 'Mul',
    'Softmax', 'Gemm', 'MatMul', 'Conv', 'Concat', 'Upsample', 'Pow', 'Sqrt', 'DepthToSpace',
    'Clip', 'BatchNormalization', 'Transpose', 'Softmax', 'AveragePool', 'Squeeze', 'MaxPool',
    'Relu', 'Concat']

  recipes: &default_optimization
    graph_optimization:   # from onnxruntime graph_optimization_level
      level: ['DISABLE_ALL', 'ENABLE_BASIC', 'ENABLE_EXTENDED', 'ENABLE_ALL']

-
  version:
    name: 'default'
  int8: *ref_1_13
  recipes:
    <<: *default_optimization
